rep(c(0,1,2), each=10)
num_vect = c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
c(my_char, "Li Xiaowei")
my_name <- c(my_char, "Li Xiaowei")
my_name
paste(my_name, collapse= " ")
paste("Hello", "world!", sep=" ")
paste(c("X", "Y", "Z"), sep="")
paste(1:3,c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep= "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
my_data/0
0/0
Inf - Inf
0
x <- 1:10
if(x>5)
x<-0
d=3L
d
y<-10f <- function(x) { y<-2                   y^2 + g(x)}g <- function(x) { x*y}
y<-10f <- function(x) {     y<-2                   y^2 + g(x)}g <- function(x) {     x*y}
y<-10f <- function(x) {     y<-2    y^2 + g(x)}g <- function(x) {     x*y}
y <- 10f <- function(x) {     y <- 2    y^2 + g(x)}g <- function(x) {     x*y}
y <- 10f <- function(x) {     y <- 2    y^2 + g(x)}g <- function(x) {     x*y}
y <- 10
f <- function(x) {     y <- 2    y^2 + g(x)}
f <- function(x) {    y <- 2    y^2 + g(x)}
f <- function(x) {    y <- 2    y^2 + g(x)}
y <- 10f <- function(x) {    y <- 2    y^2 + g(x)}g <- function(x) {     x*y}
f <- function(x) {    y <- 2    y^2 + g(x)}
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
y
sessionInfo()
swirl()
x
x[1:10]
x[is.na(x)]
is.na(x)
x
x[true]
x(true)
y <- x[!is.na(x)]
y
y[y>0]
y>0
is.na(x)
play()
is.na(x)
!is.na(x)
x[is.na(x)]
x[!is.na(x)]
x
nxt()
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "narf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
x*y
}
swirl()
my_vector < c(1:20)
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?maxtrix
?matrix
matrxi(1:20, nrow=4, ncol=5)
matrix(1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
pations <- c("Bill", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
ma_data
my_data
calss(my_data)
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data, cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE==TRUE) == TRUE
(FALSE==TRUE) == FALSE
6=7
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 !=8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
pla()
play()
identical("twins", "twins")
nxt()
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints<0)
all(ints>0)
head
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
play()
length(cls_list)
dim(cls_list)
dim(flags)
nxt()
as.character(cls_list)
dim(as.character(cls_list))
play()
class(as.character(cls_list))
length(as.character(cls_list))
nxt()
cls_vect <- sapply(flags, clss)
cls_vect <- sapply(flags, calss)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shapes,range)
shape_mat <- sapply(flash_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,,7,7))
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags[,], unique)
unique_vals <- lapply(flags, unique)
unique-vals
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem)elem[2])
data(mtcards)
data(mtcars)
str(mtcard[1,])
str(mtcar[1,])
str(mtcars[1,])
mtcards
mtcars
sapply(mtcars, is.numeric)
lapply(mtcars, is.numeric)
sapply(mtcars, is.numeric)
is.numeric(mtcars[,1])
is.numeric(mtcars[,15])
is.numeric(mtcars[,0])
is.numeric(mtcars[,11])
runif(8, min=0, max=1)
?runif
sapply(c(1,2,3), runif)
sapply(c(1,2,30), runif)
sapply(c(1,2,30), runif(,min=1, max=9))
?nlevels
data(Orage)
data(Orange)
orange$Tree
Orange$Tree
?tapply
?rnorm
?runif
?gl
mean(runif(10))
mean(rnorm(10))
mean(rnorm(100))
mean(rnorm(1000))
mean(rnorm(1000000))
mean(runif(10000))
range(runif(10))
range(rnorm(100))
rnomr(10)
rnorm(10)
?rnorm
?rep
?mapply
swirl()
swirl()
play()
dim(flags)
head(flags)
str(flags)
summary(flags)
nxt()
sapply(flags, uniqe)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
play()
flags$landmass
table(1:10)
?table
nxt()
table(flasg$animate)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plnats)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
length(plants)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
0
exit()
info
info()
main()
main()
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(0,1, prob = c(0.3, 0.7))
flips <- sample(c(0,1) prob = c(0.3, 0.7))
flips <- sample(c(0,1), prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(c(0,1), 100, prob = 0,7)
flips2 <- rbinom(c(0,1), 100, prob = 0.7)
flips2 <- rbinom(n=100, size=1, prob = 0.7)
flips2
sum(flips2)
?rnomr
?rnorm
rnomr(10)
rnorm(10)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5)
rpois(5, lambda)
rpois(5, lambda=10)
my_pois <- replicate(100, rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
info()
bye()
swirl()
info()
main(0)
main()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(t1)
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() -t1
difftime(Sys.time(), t1, units='days')
data(cars)
?cards
?cars
swirl()
info
info()
swirl()
library(swirl)
swirl()
head(cars)
plot(cards)
plots(cars)
plot(cars)
?plot
library(swirl)
swirl()
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
debug(ls)
ls
n
n
ls()
undebug(ls)
iris
len
isVir
iris$Species
isVir < iris$Species == "virginica"
isVir <- iris$Species == "virginica"
isVir
mean(iris[,"Sepal.Length"][isVir])
apply(iris[, 1:4], 2, mean)
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)[3] - tapply(mtcars$hp, mtcars$cyl, mean)[1]
apply(mtcars$mpg, mtcars$cyl, mean)
iris
tapply(iris$"Sepal.Length", iris$"Species", mean)
set.seed(1)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
?rnorm
?dnorm
?rnorm
?dnorm
?ppois
?rpois
x <- rep(0:1, each =5)
x
?qbinom
set.seed(1)
rpois(5,3)
set.seed(1)
rpois(5,2)
setwd("chapter 2")
getwd()
setwd("pgmasm2")
getwd()
ls()
dir()
list.files("specdata")
?list.files
setwd("/Users/XiaoweiLi/Google Drive/DataScience/DataScienceCoursera/Chapter 2/PgmAsm1")
dir()
list.files("specdata")
class(list.files("specdata"))
files
files <- list.files("specdata")
files
files <- list.files("specdata", full.names=TRUE)
files
?list.files
getwd()
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_ata.zip")
dir()
unzip("diet_data.zip", exdir = "diet_data")
dir()
list.files("diet_data")
class(list.files("diet_data"))
getwd()
dir()
files <- list.files("diet_data")
files
download.file(dataset_url, "diet_data")
unzip("diet_data.zip", "diet_data")
unzip("diet_data.zip", exdir="diet_data")
dir()
rm("diet_data")
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
class(andy)
dim(andy)
str(andy)
length(andy$Day)
names(andy)
str(andy)
summary(andy)
names(andy)
andy[1, "Weight"]
andy(30, "Weight")
andy[30, "Weight"]
andy[which(andy$Day == 30), "Weight"]
andy[which(andy[,"Day"] == 30), "Weight"]
subset(andy$Weight, andy$Day == 30)
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_start
andy_e
andy_end
andy_lost <- andy_end - andy_start
andy_lost
files <- list.files("diet_data")
files
summary(files)
class(files)
str(files)
files
files[1]
files[3:5]
head(read.csv(files[3]))
files[3]
files_full <- list.files("diet_data", full.names=TRUE)
files_full
head(read.csv(files_full[3]))
andy_david < rbind(andy, read.csv(files_full[2]))
andy_david <- rbind(andy, read.csv(files_full[2]))
head(andy_david)
tail(andy_david)
calss(andy_david)
calss(andy_david)
class(andy_david)
andy_david
andy_david[which(andy_david$Day == 25)]
andy_david[which(andy_david$Day == 25), ]
andy_david[,which(andy_david$Day == 25)]
andy_david[which(andy_david$Day == 25), 4]
andy_david[which(andy_david$Day == 25), ]
andy_david[25, ]
for (i in 1:5) print(i)
for (i in 1:5) {dat <- rbind(dat, read.csv(files_full[i]))}
dat <- data.frame()
for (i in 1:5) {dat <- rbind(dat, read.csv(files_full[i]))}
str(dat)
head(dat)
