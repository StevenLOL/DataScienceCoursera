for(i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], reponse = "numType")
trainSpam$numType = as.numeric(trainSpam$type) - 1
costFunction = function(x, y) sum(x != (y > 0.5))
cvError = rep(NA, 55)
library(boot)
for(i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], reponse = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
names(trainSpam)[which.min(cvError)]
)
costFunction
cvError
names(trainSpam)[1]
for(i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], reponse = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
trainSpam$numType = as.numeric(trainSpam$type) - 1
costFunction = function(x, y) sum(x != (y > 0.5))
cvError = rep(NA, 55)
library(boot)
for(i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
names(trainSpam)[which.min(cvError)]
?reformulate
names(trainSpam)
head(trainSpam)
table(trainSpam$numType)
table(trainSpam$Type)
summary(trainSpam$Type)
str(trainSpam$Type)
table(trainSpam$type)
cvError
?reformulate
?glm
?cv.glm
predictionModel = glm(numType ~ charDollar, family = "binomial", data = trainSpam)
predictionTest = predict(predictionModel, testSpam)
predictedSpam = rep("nonspam", dim(testSpam)[1])
predictedSpam[predictionModel$fitted > 0.5] = "spam"
table(predictedSpam, testSpam$type)
mns = NULL
for (i in 1:1000) mns = c(mns, mean(runif(40)))
hist(mns)
set.seed(1)
lambda = 0.2
nosim <- 1000
n <- 40
exp =  NULL
for (i in 1:1000) exp = rbind(exp, rexp(n, lambda))
expMean <- apply(exp, 1, mean)
hist(expMean, main = "Average of simulations", xlab = "Average", breaks = 30)
abline(v = mean(expMean), col = 3, lwd = 5)
abline(v = 1/lambda, col = 2, lwd = 3)
dst <- density(expMean)
plot(dst$x, dst$y, type = "n", main = "The distribution of sample mean", xlab = "Mean", ylab = "Density")
lines(seq(3, 7, length = 100), dnorm(seq(3, 7, length = 100), mean = 5, sd = (1/lambda)/sqrt(n)), col = grey(.8), lwd = 3)
lines(dst$x, dst$y, lwd = 2)
data("ToothGrowth")
library(lattice)
library(ggplot2)
tooth <- transform(ToothGrowth, dose = factor(dose))
plot1 <- xyplot(len ~ dose | supp, data = tooth, layout = c(2,1))
plot2 <- xyplot(len ~ supp | dose, data = tooth, layout = c(3,1))
print(plot1, position = c(0,0,0.5,1), more = TRUE)
print(plot2, position = c(0.5,0,1,1))
gVC1 <- tooth[which(tooth$supp == "VC" & tooth$dose == 0.5), 1]
gVC2 <- tooth[which(tooth$supp == "VC" & tooth$dose == 1), 1]
gVC3 <- tooth[which(tooth$supp == "VC" & tooth$dose == 2), 1]
gOJ1 <- tooth[which(tooth$supp == "OJ" & tooth$dose == 0.5), 1]
gOJ2 <- tooth[which(tooth$supp == "OJ" & tooth$dose == 1), 1]
gOJ3 <- tooth[which(tooth$supp == "OJ" & tooth$dose == 2), 1]
t.test(gVC1, gOJ1, paired = TRUE)$conf
t.test(gVC2, gOJ2, paired = TRUE)$conf
t.test(gVC3, gOJ3, paired = TRUE)$conf
t.test(gVC1, gVC2, paired = TRUE)$conf
t.test(gVC2, gVC3, paired = TRUE)$conf
t.test(gOJ1, gOJ2, paired = TRUE)$conf
t.test(gOJ2, gOJ3, paired = TRUE)$conf
mean(gVC1)
mena(gOJ1)
mean(gOJ1)
t.test(gVC1, gOJ1, paired = TRUE)$conf
?t.test
mean(gVC1) - mean(gOJ1)
t.test(gVC1, gVC2, paired = TRUE)$conf
t.test(gVC1, gVC2, paired = TRUE)
str(t.test(gVC1, gVC2, paired = TRUE))
str(t.test(gVC1, gVC2, paired = TRUE))$conf.int
t.test(gVC1, gVC2, paired = TRUE)$conf
t.test(gVC1, gVC2, paired = TRUE)$conf.int
str(t.test(gVC1, gVC2, paired = TRUE)$conf.int)
class(t.test(gVC1, gVC2, paired = TRUE)$conf.int)
t.test(gVC1, gVC2, paired = TRUE)$conf.int[1:2]
t.test(gVC1, gVC2, paired = TRUE)$conf[1:2]
?ToothGrowth
t.test(gVC1, gVC2, paired = TRUE)
t.test(gVC1, gVC2, paired = TRUE)$conf
?t.test
source('~/Google Drive/Study/Data Science/Assignments/Chapter6.Statistical_Inference/Chapter6Project/StatisticalInference.R', echo=TRUE)
t.test(gVC1, gVC2, paired = TRUE)$
s
t.test(gVC1, gVC2, paired = TRUE)
t.test(gVC1, gOJ1, paired = TRUE)$conf
t.test(gVC2, gOJ2, paired = TRUE)$conf
t.test(gVC3, gOJ3, paired = TRUE)$conf
t.test(gVC1, gVC2, paired = TRUE)$conf
t.test(gVC2, gVC3, paired = TRUE)$conf
t.test(gOJ1, gOJ2, paired = TRUE)$conf
t.test(gOJ2, gOJ3, paired = TRUE)$conf
t.test(gVC1, gOJ1, paired = TRUE)
t.test(gVC2, gOJ2, paired = TRUE)$conf
t.test(gVC3, gOJ3, paired = TRUE)$conf
t.test(gVC2, gOJ2, paired = TRUE)
t.test(gVC3, gOJ3, paired = TRUE)
t.test(gVC1, gOJ1, paired = TRUE)$conf
t.test(gVC2, gOJ2, paired = TRUE)$conf
t.test(gVC3, gOJ3, paired = TRUE)$conf
t.test(gVC1, gVC2, paired = TRUE)$conf
t.test(gVC2, gVC3, paired = TRUE)$conf
t.test(gOJ1, gOJ2, paired = TRUE)$conf
t.test(gOJ1, gOJ2, paired = TRUE)
?weather
library(lattice)
library(ggplot2)
download.file("hSp://www.socuteurl.com/poofyfuzzydoggy",dest="data.zip")
getwd()
setwd("./Chapter4.Exploratory_Data_Analysis/")
dir()
download.file("http://www.socuteurl.com/poofyfuzzydoggy",dest="./data.zip", method = "curl")
unzip("data.zip")
dir()
download.file("http://www.socuteurl.com/poofyfuzzydoggy",dest="./data.zip", method = "curl")
download.file("http://www.socuteurl.com/poofyfuzzydoggy",dest="./RPlot.zip", method = "curl")
getwd()
download.file("http://www.socuteurl.com/poofyfuzzydoggy",dest="./RPlot.zip", method = "curl")
weather = read.table("./therbookSilwwodWeather.txt", h = T)
weather = read.table("./therbook/SilwwodWeather.txt", h = T)
dir()
weather = read.table("./therbook/SilwoodWeather.txt", h = T)
onemonth = subset(weatcher, month == 1 & yr = 2004)
boxplot(onemonth$rain)
onemonth = subset(weatcher, month == 1 & yr == 2004)
onemonth = subset(weather, month == 1 & yr == 2004)
boxplot(onemonth$rain)
hist(weather$upper)
rug(weather$upper)
weather
names(weather)
Barplot(table(weather$month), col = "wheat", main = "Number of Observations in Months")
barplot()
barplot(table(weather$month), col = "wheat", main = "Number of Observations in Months")
weather$month
class(weather$month)
class(table(weather$month))
table(weather$month)
barplot(weather$month,
col = "wheat",
main = "Number of Observations in Months")
# Base plots: Scatterplot
barplot(table(weather$month),
col = "wheat",
main = "Number of Observations in Months")
# Base plots: Scatterplot
data1 = read.table("./therbook/Scatter1.txt", h = T)
data2 = read.table("./therbook/Scatter2.txt", h = T)
with(data1, plot(xv, ys, col = "red"))
with(data1, abline(lm(ys ~ xv)))
with(data2, points(xv2, ys2, col = "blue", pch = 11))
title("My Title", oouter = TRUE)
mfrow(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(2, 2, 2, 2))
with(data2, plot(xv2, ys2, col = "blue"))
with(data1, plot(xv, ys, col = "red"))
with(data1, abline(lm(ys ~ xv)))
with(data2, plot(xv2, ys2, col = "blue"))
with(data2, plot(xv, ys, col = "red"))
with(data1, plot(xv, ys, col = "red"))
with(data1, abline(lm(ys ~ xv)))
with(data2, point(xv2, ys2, col = "blue", pch = 11))
with(data2, point(xv2, ys2, col = "blue", pch = 11))
with(data2, points(xv2, ys2, col = "blue", pch = 11))
title("My Title", outer = TRUE)
with(data2, point(xv2, ys2, col = "blue", pch = 11))
mfrow(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(2, 2, 2, 2))
par(mfrow(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(2, 2, 2, 2)))
mfrow(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(2, 2, 2, 2))
productivity = read.table("./therbook/productivity.txt", h = T)
library(lattice)
xyplot(x ~ y, productivity, xlab = list(label = "Productivity"), ylab = list(label = "Mammal Species"))
xyplot(x ~ y | f, productivity, xlab = list(label = "Productivity"), ylab = list(label = "Mammal Species"))
library(ggplot2)
ggplot(weather, aes(x = month, y = upper)) + geom_boxplot()
weather$month
weather$upper
ggplot(weather, aes(x = month, y = upper)) + geom_boxplot()
ggplot(weather, aes(x = month, y = upper)) + geom_boxplot()
library(ggplot2)
ggplot(weather, aes(x = month, y = upper)) + geom_boxplot()
str(weather)
weather <- transform(weather, month = as.factor(month))
str(weather)
weather <- transform(weather, month = as.factor(month))
ggplot(weather, aes(x = month, y = upper)) + geom_boxplot()
weather2 = weather %>%
group_by(month) %>%
summarise(averae.upper = mean(upper))
weather2 = weather %>%
group_by(month) %>%
summarise(averae.upper = mean(upper))
weather2 = weather %>%
group_by(month)
weather = weather.group_by(month.)
weather = weather.group_by(month)
weather2 <- group_by(weather$month)
library(dplyr)
?group_by
install.packages("dplyr")
library(dplyr)
weather <- transform(weather, month = as.factor(month))
ggplot(weather, aes(x = month, y = upper)) + geom_boxplot()
weather2 = weather %>%
group_by(month) %>%
summarise(averae.upper = mean(upper))
ggplot(weather2, aes(month, average.upper)) +
geom_bar(stat = "identity")
require(base)
require(base) == TRUE
require(sdf) == TRUE
require(ggplot) == TRUE
require(ggplot2) == TRUE
ggplot(weather2, aes(month, average.upper)) +
geom_bar(stat = "identity")
weather2 = weather %>%
group_by(month) %>%
summarise(average.upper = mean(upper))
ggplot(weather2, aes(month, average.upper)) +
geom_bar(stat = "identity")
str(weather2)
weather2
ggplot(weather2, aes(month, average.upper)) +
geom_bar(aes(fill = month), stat = "identity") +
scale_fill_brewer(palette = "Set3") +
xlab("Months") +
ylab("Upper Quantile") + theme_bw()
ggplot(weather2, aes(month, average.upper)) +
geom_bar(stat = "identity")
ggplot(weather2, aes(month, average.upper)) +
geom_bar(aes(fill = month), stat = "identity") +
scale_fill_brewer(palette = "Set3") +
xlab("Months") +
ylab("Upper Quantile") + theme_bw()
library(dplyr)
weather <- transform(weather, month = as.factor(month))
ggplot(weather, aes(x = month, y = upper)) + geom_boxplot()
weather2 = weather %>%
group_by(month) %>%
summarise(average.upper = mean(upper))
ggplot(weather2, aes(month, average.upper)) +
geom_bar(stat = "identity")
ggplot(weather2, aes(month, average.upper)) +
geom_bar(aes(fill = month), stat = "identity") +
scale_fill_brewer(palette = "Set3") +
xlab("Months") +
ylab("Upper Quantile") + theme_bw()
qplot(month, upper = fill = month, data = weather, facets = ~yr, geom = "bar", state = "identity")
data = read.csv(("final.csv"))
areas = unique(subset(data, select = c(Planning_Area, Planning_Region)))
ggplot(weather2, aes(month, average.upper)) +
geom_bar(aes(fill = month), stat = "identity") +
scale_fill_brewer(palette = "Set3") +
xlab("Months") +
ylab("Upper Quantile")
ggplot(weather2, aes(month, average.upper)) +
geom_bar(aes(fill = month), stat = "identity") +
scale_fill_brewer(palette = "Set3") +
xlab("Months") +
ylab("Upper Quantile") + theme_bw()
qplot(month, upper = fill = month, data = weather, facets = ~yr, geom = "bar", state = "identity")
qplot(month, upper = fill = month, data = weather, facets = ~yr, geom = "bar", state = "identity")
qplot(month, upper, fill = month, data = weather, facets = ~yr, geom = "bar", state = "identity")
qplot(month, upper, fill = month, data = weather, facets = ~yr, geom = "bar", stat = "identity")
data = read.csv(("final.csv"))
data = read.csv("./therbook/final.csv")
data = read.csv("./therbook/final.csv")
library(swirl)
swirl()
info()
main()
main()
main()
info()
bye()
data("mtcars")
mean(mtcars$mpg)
qnomr(.05)
qnorm(.05)
sd(mtcars$mpg)
qnorm(.95, lower.tail = FLASE)
qnorm(.95, lower.tail = FALSE)
qnorm(.95, lower.tail = TRUE)
mean(mtcars$mgp) + qnorm(.95, lower.tail = TRUE) * sd(mtcars$mpg)/sqrt(nrow(mtcars))
mean(mtcars$mpg) + qnorm(.95, lower.tail = TRUE) * sd(mtcars$mpg)/sqrt(nrow(mtcars))
mt4 <- mtcars[mtcars$cyl == 4,]
mt6 <- mtcars[mtcars$cyl == 6,]
mt4$mpg
mt6$mpg
t.test(mt4$mpg, mt6$mpg, paired = FALSE, var.equal = FALSE)
?t.test
binom.test(100, 3)
qnorm(0.95, mean = 3, sd = 1.1)
qnorm(0.95, mean = 3, sd = 1.1/10)
qnorm(0.95, mean = 3, sd = 1.1/10, lower.tail = FALSE)
qnorm(0.95, mean = 3, sd = 1.1/10, lower.tail = TRUE)
qnorm(0.5, mean = 3, sd = 1.1/10, lower.tail = TRUE)
qnorm(0.975, mean = 3, sd = 1.1/10, lower.tail = TRUE)
qnorm(0.975, mean = 3, sd = 1.1/10, lower.tail = FALSE)
qnorm(0.95, lower.tail = TRUE)
qnorm(0.95, lower.tail = FALSE)
qnorm(0.975, lower.tail = FALSE)
qnorm(0.975, lower.tail = TURE)
qnorm(0.975, lower.tail = TRUE)
?binom.test
binom.test(55, 100)
ppois(15800, lambda = 520 * 30)
ppois(15800, lambda = 520 * 30, lower.tail = FALSE)
?ppois
data(mtcars)
mn <- mean(mtcars$mpg)
s <- sd(mtcars$mpg)
z <- qnorm(.05)
mu0 <- mn - z * s / sqrt(nrow(mtcars))
mu0
m4 <- mtcars$mpg[mtcars$cyl == 4]
m6 <- mtcars$mpg[mtcars$cyl == 6]
p <- t.test(m4, m6, paired = FALSE, alternative="two.sided", var.equal=FALSE)$p.value
m4 <- mtcars$mpg[mtcars$cyl == 4]
m6 <- mtcars$mpg[mtcars$cyl == 6]
p <- t.test(m4, m6, paired = FALSE, alternative="two.sided", var.equal=FALSE)$p.value
p
ans <- round(pbinom(54, prob = .5, size = 100, lower.tail = FALSE),4)
ans
pv <- ppois(15800 - 1, lambda = 520 * 30, lower.tail = FALSE)
pnorm(15800 / 30, mean = 520, sd = sqrt(520 / 30), lower.tail = FALSE)
pv
pv <- ppois(15800 - 1, lambda = 520 * 30, lower.tail = FALSE)
pnorm(15800 / 30, mean = 520, sd = sqrt(520 / 30), lower.tail = FALSE)
power <- pnorm(10 + qnorm(.95) * .4, mean = 11, sd = .4, lower.tail = FALSE
n <- (qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
n <- (qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2)
power <- pnorm(10 + qnorm(.95) * .4, mean = 11, sd = .4, lower.tail = FALSE)
n <- (qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
n <- (qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
mt6 <- mtcars[mycars$cyl == 6, ]$mpg
mt6 <- mtcars[mtcars$cyl == 6, ]$mpg
mt8 <- mtcars[mtcars$cyl == 8, ]$mpg
t.test(mt6, mt8, paired = FALSE, var.equal = TRUE)
mpg8 <- mtcars$mpg[mtcars$cyl == 8]
mpg6 <- mtcars$mpg[mtcars$cyl == 6]
m8 <- mean(mpg8); m6 <- mean(mpg6)
s8 <- sd(mpg8); s6 <- sd(mpg6)
n8 <- length(mpg8); n6 <- length(mpg6)
s8
s6
n8 <- length(mpg8); n6 <- length(mpg6)
p <- t.test(mpg8, mpg6, paired = FALSE, alternative="two.sided", var.equal=TRUE)$p.value
mixprob <- (n8 - 1) / (n8 + n6 - 2)
s <- sqrt(mixprob * s8 ^ 2  +  (1 - mixprob) * s6 ^ 2)
z <- (m8 - m6) / (s * sqrt(1 / n8 + 1 / n6))
pz <- 2 * pnorm(-abs(z))
p
pz
mixprob <- (n8 - 1) / (n8 + n6 - 2)
s <- sqrt(mixprob * s8 ^ 2  +  (1 - mixprob) * s6 ^ 2)
s
base <- c(140, 138, 150, 148, 135)
w2 <- c(132, 135, 151, 146, 130)
t.test(base, w2, paired = TRUE)
qnorm(.95, mean = 1100, sd = 30)
qnorm(.975, mean = 1100, sd = 30)
qnorm(.975, mean = 1100, sd = 30, lower.tail = FALSE)
qnorm(.975, mean = 1100, sd = 30, lower.tail = TRUE)
qnorm(.975, mean = 1100, sd = 30/sqrt(3))
qnorm(.95, mean = 1100, sd = 30/sqrt(3))
qnorm(.95, mean = 1100, sd = 30/sqrt(9))
qnorm(.975, mean = 1100, sd = 30/sqrt(9))
qnorm(.975, mean = 1100, sd = 30/sqrt(9-1))
qnorm(.975, mean = 1100, sd = 30/sqrt(9))
pbinom((2, prob = .5, size = 4, lower.tail = FALSE)
pbinom(2, prob = .5, size = 4, lower.tail = FALSE)
p(10, 17.87, lower.tail = FALSE)
ppois(10, 17.87, lower.tail = FALSE)
ppois(9, 17.87, lower.tail = FALSE)
pv <- ppois(15800 - 1, lambda = 520 * 30, lower.tail = FALSE)
pv
ppois(17, 17.87, lower.tail = FALSE)
sp <- sqrt((8*1 + 8*1.8^2)/16)
sp
sp <- sqrt((8*1.5 + 8*1.8^2)/16)
sp
sp <- sqrt((8*1.5^2 + 8*1.8^2)/16)
sp
semd <- sp * sqrt(1/9*2)
semd
md = -4
md + c(-1, 1) * qt(.975, n1 + n2 - 2) *semd,
md + c(-1, 1) * qt(.975, 16) *semd,
md + c(-1, 1) * qt(.975, 16) *semd
data("sleep")
sp <- sqrt(((8 - 1) * 15.34^2 + (21 - 1) * 18.23^2) / (8 + 21 - 2))
132.86 - 127.44 + c(-1, 1) * qt(.975, (8 + 21 - 2)) * sp * (1/8 + 1/21)^.5
x1 <- sleep$extra[sleep$group == 1]
x2 <- sleep$extra[sleep$group == 2]
n1 <- length(g1); n2 <- length(g2)
sp <- sqrt(((n1 - 1) * sd(x1)^2 + (n2 - 1) * sd(x2)^2) / (n1 + n2 - 2))
# mean difference
data(sleep)
head(sleep)
g1 <- sleep$extra[1:10]; g2 <- sleep$extra[11:20]
difference <- g2 - g1
mn <- mean(difference); s <- sd(difference); n <- 10
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
t.test(difference)
data(sleep)
head(sleep)
g1 <- sleep$extra[1:10]; g2 <- sleep$extra[11:20]
difference <- g2 - g1
mn <- mean(difference); s <- sd(difference); n <- 10
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
t.test(difference)
t.test(g2, g1, paired = TRUE)
t.test(extra ~ I(relevel(group, 2)), paird = TRUE, data = sleep)
sp <- sqrt(((8 - 1) * 15.34^2 + (21 - 1) * 18.23^2) / (8 + 21 - 2))
132.86 - 127.44 + c(-1, 1) * qt(.975, (8 + 21 - 2)) * sp * (1/8 + 1/21)^.5
x1 <- sleep$extra[sleep$group == 1]
x2 <- sleep$extra[sleep$group == 2]
n1 <- length(g1); n2 <- length(g2)
sp <- sqrt(((n1 - 1) * sd(x1)^2 + (n2 - 1) * sd(x2)^2) / (n1 + n2 - 2))
# mean difference
md <- mean(g2) - mean(g1)
# standard error of mean difference
semd <- sp * sqrt(1/n1 + 1/n2)
rbind(
md + c(-1, 1) * qt(.975, n1 + n2 - 2) *semd,
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf,
t.test(g2, g1, paired = TRUE)$conf
)
md
qt(.975, 16)
sp <- sqrt((8*1.5^2 + 8*1.8^2)/16)
sp
semd <- sp * sqrt(1/4)
semd
-4 + c(-1,1)*qt(.975, 16)*semd
power.t.test(n = 16, delta = 2/4, sd = 1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2, sd = 4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd = 200, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 100, delta = 0.01, sd = 0.04)
power.t.test(n = 100, delta = 0.01, sd = 0.04, type = "one.sample", alt = "one.sided")
n <- (qnorm(.95) + qnorm(.9)) ^ 2 * .04 ^ 2 / .01^2
n
qnorm(.95, mean = 1100, sd = 30/sqrt(9))
qnorm(.975, mean = 1100, sd = 30/sqrt(9))
qnorm(.975, mean = 1100, sd = 30/sqrt(9))
sp <- sqrt(((9-1)*1.5^2 + (9-1)*1.8^2)/(9+9-2))
sp
semd <- sp * sqrt(1/9 + 1/9)
semd
se <- sp * sqrt(1/9 + 1/9)
se
t <- (-3 - 1) + c(-1,1)*qt(.975, 16) * se
t
qnorm(0.975)
qnorm(0.95)
?pnorm
pnorm(-5.655699, mean = -4)
pnorm(-5.655699, mean = -4, sd = se)
pnorm(-5.655699, mean = -4, sd = sp)
qnorm(.95, mean = 1100, sd = 30/sqrt(9))
qnorm(.95, mean = 1100, sd = 30/sqrt(9))
qnorm(.975, mean = 1100, sd = 30/sqrt(9))
qnorm(.975, mean = 1100, sd = 30
)
qnorm(.975, mean = 1100, sd = 30)
qnorm(.975, mean = 1100, sd = 30)
qnorm(.955, mean = 1100, sd = 30)
qnorm(.95, mean = 1100, sd = 30)
qnorm(.95, mean = 1100)
30*1.645
30*1.645/3
qnorm(.975, mean = 1100)
30*1.96/3
qnorm(.975, mean = 1100, sd = 30/sqrt(8))
qt(.975.9)
qt(0.975, 9)
qt(0.955, 9)
30.2.26
30*2.26
qt(0.955, 8)
qt(0.975, 8)
1100 + qt(.975, 8) * 30/3
1100 + c(-1, 1) * qt(.975, 9-1) * sqrt(9)
sp <- sqrt(((9-1)*1.5^2 + (9-1)*1.8^2)/(9+9-2))
se <- sp * sqrt(1/9 + 1/9)
t <- (-3 - 1) + c(-1,1)*qt(.975, 16) * se
t
