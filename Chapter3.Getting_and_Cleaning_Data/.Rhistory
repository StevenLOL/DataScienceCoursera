vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "narf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
x*y
}
swirl()
my_vector < c(1:20)
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?maxtrix
?matrix
matrxi(1:20, nrow=4, ncol=5)
matrix(1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
pations <- c("Bill", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
ma_data
my_data
calss(my_data)
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data, cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE==TRUE) == TRUE
(FALSE==TRUE) == FALSE
6=7
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 !=8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
pla()
play()
identical("twins", "twins")
nxt()
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints<0)
all(ints>0)
head
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
play()
length(cls_list)
dim(cls_list)
dim(flags)
nxt()
as.character(cls_list)
dim(as.character(cls_list))
play()
class(as.character(cls_list))
length(as.character(cls_list))
nxt()
cls_vect <- sapply(flags, clss)
cls_vect <- sapply(flags, calss)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shapes,range)
shape_mat <- sapply(flash_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,,7,7))
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags[,], unique)
unique_vals <- lapply(flags, unique)
unique-vals
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem)elem[2])
data(mtcards)
data(mtcars)
str(mtcard[1,])
str(mtcar[1,])
str(mtcars[1,])
mtcards
mtcars
sapply(mtcars, is.numeric)
lapply(mtcars, is.numeric)
sapply(mtcars, is.numeric)
is.numeric(mtcars[,1])
is.numeric(mtcars[,15])
is.numeric(mtcars[,0])
is.numeric(mtcars[,11])
runif(8, min=0, max=1)
?runif
sapply(c(1,2,3), runif)
sapply(c(1,2,30), runif)
sapply(c(1,2,30), runif(,min=1, max=9))
?nlevels
data(Orage)
data(Orange)
orange$Tree
Orange$Tree
?tapply
?rnorm
?runif
?gl
mean(runif(10))
mean(rnorm(10))
mean(rnorm(100))
mean(rnorm(1000))
mean(rnorm(1000000))
mean(runif(10000))
range(runif(10))
range(rnorm(100))
rnomr(10)
rnorm(10)
?rnorm
?rep
?mapply
swirl()
swirl()
play()
dim(flags)
head(flags)
str(flags)
summary(flags)
nxt()
sapply(flags, uniqe)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
play()
flags$landmass
table(1:10)
?table
nxt()
table(flasg$animate)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plnats)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
length(plants)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
0
exit()
info
info()
main()
main()
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(0,1, prob = c(0.3, 0.7))
flips <- sample(c(0,1) prob = c(0.3, 0.7))
flips <- sample(c(0,1), prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(c(0,1), 100, prob = 0,7)
flips2 <- rbinom(c(0,1), 100, prob = 0.7)
flips2 <- rbinom(n=100, size=1, prob = 0.7)
flips2
sum(flips2)
?rnomr
?rnorm
rnomr(10)
rnorm(10)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5)
rpois(5, lambda)
rpois(5, lambda=10)
my_pois <- replicate(100, rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
info()
bye()
swirl()
info()
main(0)
main()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(t1)
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() -t1
difftime(Sys.time(), t1, units='days')
data(cars)
?cards
?cars
swirl()
info
info()
swirl()
library(swirl)
swirl()
head(cars)
plot(cards)
plots(cars)
plot(cars)
?plot
library(swirl)
swirl()
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
debug(ls)
ls
n
n
ls()
undebug(ls)
mylist <- list(letters = c("A", "b", "c"), number = 1:3, matrix(1:25, ncol = 5))
head(mylist)
mylist[1]
letters
mylist$letters
mylist[[1]]
class(mylist[1])
splitNames[[6]][1]
cameraData <- read.csv("./data/cameras.csv")
names(cameraData)
tolower(names(cameraData))
splitNames = strsplit(names(cameraData), "\\.")
splitNames[[5]]
splitNames[[6]]
setwd("./chapter3/")
dir()
cameraData <- read.csv("./data/cameras.csv")
names(cameraData)
tolower(names(cameraData))
splitNames = strsplit(names(cameraData), "\\.")
splitNames[[5]]
splitNames[[6]]
splitNames[[6]][1]
firstElement <- function(x) {x[1]}
sapply(splitNames, firstElement)
splitNames
splitNames[[6]][2]
fileUrl1 <- "https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileUrl2 <- "https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download.file(fileUrl1, destfile = "./data/reviews.csv", method = "curl")
download.file(fileUrl2, destfile = "./data/solutions.csv", method = "curl")
reviews <- read.csv("./data/reviews.csv"); solutions <- read.csv("./data/solutions.csv")
head(reviews, 2)
head(solutions, 2)
names(reviews)
sub("_", "", names(reviews),)
testName <- "this_is_a_test"
sub("_", "", testName)
gsub("_", "", testName)
grep("Alemeda", cameraData$intersection)
grep("Alameda", cameraData$intersection)
table(grepl("Alameda", cameraData$intersection))
cameraData2 <- cameraData[!grepl("Alameda", cameraData$intersection)]
cameraData2 <- cameraData[!grepl("Alameda", cameraData$intersection),]
grep("Alameda", cameraData$intersection, value = TRUE)
grep("Alameda", cameraData$intersection)
grep("Alameda", cameraData$intersection)
grep("Alameda", cameraData$intersection, value = TRUE)
grep("JeffStree", camearData$intersection)
grep("JeffStree", cameraData$intersection)
grep("Alameda", cameraData$intersection, value = TRUE)
grep("JeffStreet", cameraData$intersection)
length(grep("JeffStreet", cameraData$intersection))
library(stringr)
nchar("Jeffrey Leek")
substr("Jeffrey Leek", 1, 7)
paste("Jeffrey", "Leek")
?substr
substr("affadf", 2,2)
substr("affadf", 3,2)
paste0("Jeffrey", "Leek")
str_trim("Jeff    ")
d1 = date()
d1
class(d1)
d2 = Sys.Date()
d2
class(d2)
d2
class(d2)
format(d2, "%a %b %d")
format(d2, "%A %b %d")
x = c("1jan1960", "2jan1960", "31mar1960", "30jul1960"); z = as.Date(x, "%d%b%Y")
z
z[1] - z[2]
as.numeric(z[1] - z[2])
weekdays(d2)
months(d2)
julian(d2)
library(lubridate); ymd("20140108")
mdy("08/04/2013")
dmy("03-04-2013")
ymd_hms("2011-08-93 10:15:13")
ymd_hms("2011-08-03 10:15:13")
ymd_hms("2011-08-03 10:15:03, tz = "Pacific/Auckland)
ymd_hms("2011-08-03 10:15:03, tz = "Pacific/Auckland"")
ymd_hms("2011-08-03 10:15:03", tz = "Pacific/Auckland"")
ymd_hms("2011-08-03 10:15:03", tz = "Pacific/Auckland")
ymd_hms("2011-08-03 10:15:03", tz = "Pacific/Auckland")
?Sys.timezone
x = dmy(c("1jan2013", "2jan2013", "31mar2013", "30jul2013"))
wday(x[1])
wday(x[1], label = TRUE)
x = dmy(c("1jan2013", "2jan2013", "31mar2013", "30jul2013"))
wday(x[1])
wday(x[1], label = TRUE)
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "week4q1data.csv", method = "curl")
dataHousing <- read.csv("./week4q1data.csv", header = TRUE)
head(dataHousing)
names(dataHousing)
strsplit(wgtp)
dim(dataHousing)
?strsplit
strsplit(names(dataHousing))[123]
strsplit(names(dataHousing), "wgtp")[123]
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./week4q2data.csv", method = "curl")
dataGDP <- read.csv("./week4q2data.csv")
head(dataGDP)
dataGDPRaw <- read.csv("./week3q3dataGDP.csv", stringsAsFactors = FALSE, header = FALSE)
dataEDURaw <- read.csv("./week3q3dataEDU.csv", stringsAsFactors = FALSE, header = FALSE)
dataGDP <- dataGDPRaw[6:236, c(1:2, 4:5)]
names(dataGDP) <- c("CountryCode", "Ranking", "Country", "GDP")
dataGDP$Ranking <- as.numeric(dataGDP$Ranking)
dataGDP$GDP <- gsub(" ", "", dataGDP$GDP)
dataGDP$GDP <- gsub("\\.\\.", "", dataGDP$GDP)
dataGDP$GDP <- gsub("\\,", "", dataGDP$GDP)
dataGDP$GDP <- as.numeric(dataGDP$GDP)
dataGDPCountry <- dataGDP[which(dataGDP$CountryCode != "" & !is.na(dataGDP$Ranking)),]
dataEDU <- dataEDURaw
names(dataEDU) <- dataEDU[1,]
dataEDU <- dataEDU[-1,]
dataGDPRaw <- read.csv("./week4q2data.csv", stringsAsFactors = FALSE, header = FALSE)
dataGDP <- dataGDPRaw[6:236, c(1:2, 4:5)]
names(dataGDP) <- c("CountryCode", "Ranking", "Country", "GDP")
dataGDP$Ranking <- as.numeric(dataGDP$Ranking)
dataGDP$GDP <- gsub(" ", "", dataGDP$GDP)
dataGDP$GDP <- gsub("\\.\\.", "", dataGDP$GDP)
dataGDP$GDP <- gsub("\\,", "", dataGDP$GDP)
dataGDP$GDP <- as.numeric(dataGDP$GDP)
dataGDPCountry <- dataGDP[which(dataGDP$CountryCode != "" & !is.na(dataGDP$Ranking)),]
mean(dataGDP$GDP)
mean(dataGDP$GDP, na.rm = TRUE)
dataGDP <- dataGDPRaw[6:236, c(1:2, 4:5)]
head(dataGDP)
names(dataGDP) <- c("CountryCode", "Ranking", "Country", "GDP")
head(dataGDP)
tail(dataGDP)
class(dataGDP$GDP)
as.numeric(dataGDP$GDP)
dataGDP$Ranking <- as.numeric(dataGDP$Ranking)
dataGDP$GDP <- gsub(" ", "", dataGDP$GDP)
dataGDP$GDP <- gsub("\\.\\.", "", dataGDP$GDP)
dataGDP$GDP <- gsub("\\,", "", dataGDP$GDP)
dataGDP$GDP
dataGDP$GDP <- as.numeric(dataGDP$GDP)
dataGDP$GDP
mean(dataGDP$GDP)
mean(dataGDP$GDP.na.rm = TRUE)
mean(dataGDP$GDP, rm.na = TRUE)
mean(dataGDP$GDP, na.rm = TRUE)
head(dataGDPRaw, 10)
tail(dataGDP, 20)
tail(dataGDPRaw, 20)
tail(dataGDPRaw, 100)
tail(dataGDPRaw, 100)
head(dataGDP, 30)
tail(dataGDP, 30)
tail(dataGDP, 50)
mean(dataGDP$GDP[1:195], na.rm = TRUE)
names(dataGDP)
grep("^United", dataGDP$Country)
grep("^United", dataGDP$Country)
grep("^United", dataGDP$Country)
grep("^United", dataGDP$Country)
dataGDP$Country
fileUrlGDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrlEDU <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrlGDP, "./week4q2toq4dataGDP.csv", method = "curl")
download.file(fileUrlEDU, "./week4q2toq4dataEDU.csv", method = "curl")
dataGDPRaw <- read.csv("./week4q2toq4dataGDP.csv", stringsAsFactors = FALSE, header = FALSE)
dataEDURaw <- read.csv("./week4q2toq4dataEDU.csv", stringsAsFactors = FALSE, header = FALSE)
dataGDP <- dataGDPRaw[6:236, c(1:2, 4:5)]
names(dataGDP) <- c("CountryCode", "Ranking", "Country", "GDP")
dataGDP$Ranking <- as.numeric(dataGDP$Ranking)
dataGDP$GDP <- gsub(" ", "", dataGDP$GDP)
dataGDP$GDP <- gsub("\\.\\.", "", dataGDP$GDP)
dataGDP$GDP <- gsub("\\,", "", dataGDP$GDP)
dataGDP$GDP <- as.numeric(dataGDP$GDP)
dataGDPCountry <- dataGDP[which(dataGDP$CountryCode != "" & !is.na(dataGDP$Ranking)),]
dataEDU <- dataEDURaw
names(dataEDU) <- dataEDU[1,]
dataEDU <- dataEDU[-1,]
mean(dataGDP$GDP[1:195], na.rm = TRUE)
grep("^United", dataGDP$Country)
?merge
names(dataEDU)
names(dataGDP)
mergedData <- merge(dataGDP, dataEDU, by = "CountryCode", all = TRUE)
head(mergedData)
names(mergedData)
mergedData$"Special Notes"
grep("Fiscal year end: June 30", mergedData$"Special Notes")
grepl("Fiscal year end: June 30", mergedData$"Special Notes")
sum(grepl("Fiscal year end: June 30", mergedData$"Special Notes"))
inlibrary(quantmod)
intall.package("quantmod")
intall.packages("quantmod")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN", auto.assign = FALSE)
sampleTime = index(amzn)
amzn
sampleTime = index(amzn)
sampleTime
count(grepl("^2012", sampletimes))
sum(grepl("^2012", sampletimes))
sum(grepl("^2012", sampleTimes))
sum(grepl("^2012", sampleTime))
sampleTime[grep("^2012", sampleTime)]
day(sampleTime[grep("^2012", sampleTime)])
weekdays(sampleTime[grep("^2012", sampleTime)])
weekdays(sampleTime[grep("^2012", sampleTime)]) == "Monday"
sum(weekdays(sampleTime[grep("^2012", sampleTime)]) == "Monday")
dataHousing <- read.csv("./week4q1data.csv", header = TRUE)
strsplit(names(dataHousing), "wgtp")[123]
